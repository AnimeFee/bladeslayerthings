local function FuseGems(maxLevel, tabObject)
    local function FuseGemsHelper(currentLevel)
        local gemID = GetNextGemID(currentLevel)

        if gemID then
            print("Level", currentLevel, "gem ID found:", gemID)
            currentLevel = currentLevel + 1 -- Increment the level for the next iteration

            -- Construct the args table with gemID repeated five times
            local args = {
                [1] = {
                    [1] = gemID,
                    [2] = gemID,
                    [3] = gemID,
                    [4] = gemID,
                    [5] = gemID
                }
            }

            print("Invoking FuseGem remote with args:", args)

            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("FuseGem"):InvokeServer(unpack(args))

            -- Wait for some time before checking for the next level
            wait(0.000001)

            FuseGemsHelper(currentLevel)
        else
            print("Error: Could not find gem ID for level", currentLevel)
        end
    end

    for level = 1, maxLevel do
        tabObject:AddButton({
            Name = "Fuse Gem to level " .. tostring(maxLevel) .. " w/ Lv." .. level,
            Callback = function()
                FuseGemsHelper(level)
            end
        })
    end
end
